{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","channel","isDev","isShowingStats","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","model","selected","initialTypes","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","threeRenderer","antialias","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","shadowMap","Config","capabilities","getMaxAnisotropy","updateSize","offsetWidth","offsetHeight","render","Light","init","visible","castShadow","mapSize","height","directionalLightHelper","lightName","rS","bS","glS","tS","Environment","geometry","depthWrite","ground","rotation","scene_scale","opacity","receiveShadow","markerGroup","grid","transparent","Stats","renderer","start","tick","frame","end","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","Obstacle","callback","obstacles","entries","forEach","obs","obstacle","createGeometry","createMaterial","floor","random","deleteIfExists","calculateZ","radX","radY","radZ","log","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","remove","objects","children","obj","startsWith","STLLoader","require","Robot","R","G","B","ambient","r","setRGB","heading","load","DEG2RAD","clickEvent","robot","alert","move","currentHeading","newHeading","rotationFlag","round","Tween","to","onUpdate","onComplete","delay","disp","querySelector","display","setTimeout","MQTTClient","updateChannel","client_id","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","publish","onMessageArrived","onConnectionLost","onFailure","channelHash","location","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","t","destinationName","topic","indexOf","data","JSON","parse","error","entry","exists","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","raycaster","mouse","Main","light","place","source","THREEAR","stats","setUp","then","controller","environment","patternMarker","patternUrl","markerObject","trackMarker","lastTimeMsec","requestAnimationFrame","animate","nowMsec","onDocumentMouseDown","setFromCamera","intersects","intersectObjects","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["module.exports = function (THREE) {\n    var MOUSE = THREE.MOUSE;\n    if (!MOUSE) MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    /*global THREE, console */\n\n    function OrbitConstraint(object) {\n        this.object = object;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        // and where it pans with respect to.\n        this.target = new THREE.Vector3();\n\n        // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // Limits to how far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var EPS = 0.000001;\n\n        // Current position in spherical coordinate system.\n        var theta;\n        var phi;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // API\n\n        this.getPolarAngle = function () {\n            return phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n\n        this.rotateLeft = function (angle) {\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n            phiDelta -= angle;\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = (function () {\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in distance in world space to move up\n        this.panUp = (function () {\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                scope.panLeft((2 * deltaX * targetDistance) / screenHeight);\n                scope.panUp((2 * deltaY * targetDistance) / screenHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                // orthographic\n                scope.panLeft((deltaX * (scope.object.right - scope.object.left)) / screenWidth);\n                scope.panUp((deltaY * (scope.object.top - scope.object.bottom)) / screenHeight);\n            } else {\n                // camera neither orthographic or perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            }\n        };\n\n        this.dollyIn = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.dollyOut = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.update = (function () {\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat.clone().inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n                var position = this.object.position;\n\n                offset.copy(position).sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n\n                theta = Math.atan2(offset.x, offset.z);\n\n                // angle from y-axis\n\n                phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n                theta += thetaDelta;\n                phi += phiDelta;\n\n                // restrict theta to be between desired limits\n                theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this.target.add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(this.target).add(offset);\n\n                this.object.lookAt(this.target);\n\n                if (this.enableDamping === true) {\n                    thetaDelta *= 1 - this.dampingFactor;\n                    phiDelta *= 1 - this.dampingFactor;\n                } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(this.object.position) > EPS ||\n                    8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n    }\n\n    // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n    // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n    // supported.\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n    function OrbitControls(object, domElement) {\n        var constraint = new OrbitConstraint(object);\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // API\n\n        Object.defineProperty(this, 'constraint', {\n            get: function () {\n                return constraint;\n            }\n        });\n\n        this.getPolarAngle = function () {\n            return constraint.getPolarAngle();\n        };\n\n        this.getAzimuthalAngle = function () {\n            return constraint.getAzimuthalAngle();\n        };\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // center is old, deprecated; use \"target\" instead\n        this.center = this.target;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        // for reset\n\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // events\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n        }\n\n        this.update = function () {\n            if (this.autoRotate && state === STATE.NONE) {\n                constraint.rotateLeft(getAutoRotationAngle());\n            }\n\n            if (constraint.update() === true) {\n                this.dispatchEvent(changeEvent);\n            }\n        };\n\n        this.reset = function () {\n            state = STATE.NONE;\n\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n\n            this.update();\n        };\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.enableRotate === false) return;\n\n                state = STATE.ROTATE;\n\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.enableZoom === false) return;\n\n                state = STATE.DOLLY;\n\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.enablePan === false) return;\n\n                state = STATE.PAN;\n\n                panStart.set(event.clientX, event.clientY);\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (state === STATE.ROTATE) {\n                if (scope.enableRotate === false) return;\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n            } else if (state === STATE.DOLLY) {\n                if (scope.enableZoom === false) return;\n\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    constraint.dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n                    constraint.dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.enablePan === false) return;\n\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n            }\n\n            if (state !== STATE.NONE) scope.update();\n        }\n\n        function onMouseUp(/* event */) {\n            if (scope.enabled === false) return;\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n            if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var delta = 0;\n\n            if (event.wheelDelta !== undefined) {\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                // Firefox\n\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                constraint.dollyOut(getZoomScale());\n            } else if (delta < 0) {\n                constraint.dollyIn(getZoomScale());\n            }\n\n            scope.update();\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n            switch (event.keyCode) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n            }\n        }\n\n        function touchstart(event) {\n            if (scope.enabled === false) return;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    dollyStart.set(0, distance);\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n\n                    state = STATE.TOUCH_PAN;\n\n                    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n        }\n\n        function touchmove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n                    if (state !== STATE.TOUCH_ROTATE) return;\n\n                    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                    // rotating across whole screen goes 360 degrees around\n                    constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                    rotateStart.copy(rotateEnd);\n\n                    scope.update();\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n                    if (state !== STATE.TOUCH_DOLLY) return;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n\n                    dollyEnd.set(0, distance);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                    if (dollyDelta.y > 0) {\n                        constraint.dollyOut(getZoomScale());\n                    } else if (dollyDelta.y < 0) {\n                        constraint.dollyIn(getZoomScale());\n                    }\n\n                    dollyStart.copy(dollyEnd);\n\n                    scope.update();\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n                    if (state !== STATE.TOUCH_PAN) return;\n\n                    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    panDelta.subVectors(panEnd, panStart);\n\n                    pan(panDelta.x, panDelta.y);\n\n                    panStart.copy(panEnd);\n\n                    scope.update();\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function touchend(/* event */) {\n            if (scope.enabled === false) return;\n\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n\n        this.dispose = function () {\n            this.domElement.removeEventListener('contextmenu', contextmenu, false);\n            this.domElement.removeEventListener('mousedown', onMouseDown, false);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n            this.domElement.removeEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n            this.domElement.removeEventListener('touchstart', touchstart, false);\n            this.domElement.removeEventListener('touchend', touchend, false);\n            this.domElement.removeEventListener('touchmove', touchmove, false);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            window.removeEventListener('keydown', onKeyDown, false);\n        };\n\n        this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n        this.domElement.addEventListener('mousedown', onMouseDown, false);\n        this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n        this.domElement.addEventListener('touchstart', touchstart, false);\n        this.domElement.addEventListener('touchend', touchend, false);\n        this.domElement.addEventListener('touchmove', touchmove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n        this.update();\n    }\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n        object: {\n            get: function () {\n                return this.constraint.object;\n            }\n        },\n\n        target: {\n            get: function () {\n                return this.constraint.target;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: target is now immutable. Use target.set() instead.');\n                this.constraint.target.copy(value);\n            }\n        },\n\n        minDistance: {\n            get: function () {\n                return this.constraint.minDistance;\n            },\n\n            set: function (value) {\n                this.constraint.minDistance = value;\n            }\n        },\n\n        maxDistance: {\n            get: function () {\n                return this.constraint.maxDistance;\n            },\n\n            set: function (value) {\n                this.constraint.maxDistance = value;\n            }\n        },\n\n        minZoom: {\n            get: function () {\n                return this.constraint.minZoom;\n            },\n\n            set: function (value) {\n                this.constraint.minZoom = value;\n            }\n        },\n\n        maxZoom: {\n            get: function () {\n                return this.constraint.maxZoom;\n            },\n\n            set: function (value) {\n                this.constraint.maxZoom = value;\n            }\n        },\n\n        minPolarAngle: {\n            get: function () {\n                return this.constraint.minPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minPolarAngle = value;\n            }\n        },\n\n        maxPolarAngle: {\n            get: function () {\n                return this.constraint.maxPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxPolarAngle = value;\n            }\n        },\n\n        minAzimuthAngle: {\n            get: function () {\n                return this.constraint.minAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minAzimuthAngle = value;\n            }\n        },\n\n        maxAzimuthAngle: {\n            get: function () {\n                return this.constraint.maxAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxAzimuthAngle = value;\n            }\n        },\n\n        enableDamping: {\n            get: function () {\n                return this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                this.constraint.enableDamping = value;\n            }\n        },\n\n        dampingFactor: {\n            get: function () {\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                this.constraint.dampingFactor = value;\n            }\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                return !this.enableZoom;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                this.enableZoom = !value;\n            }\n        },\n\n        noRotate: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                return !this.enableRotate;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                this.enableRotate = !value;\n            }\n        },\n\n        noPan: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                return !this.enablePan;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                this.enablePan = !value;\n            }\n        },\n\n        noKeys: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                return !this.enableKeys;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                this.enableKeys = !value;\n            }\n        },\n\n        staticMoving: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                return !this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                this.constraint.enableDamping = !value;\n            }\n        },\n\n        dynamicDampingFactor: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.constraint.dampingFactor = value;\n            }\n        }\n    });\n\n    return OrbitControls;\n};\n","import TWEEN from '@tweenjs/tween.js';\n\n// This object contains the state of the app\nexport default {\n    scale: 0.025,\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15',\n        channel: 'v1'\n    },\n    isDev: true,\n    isShowingStats: false,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    model: {\n        selected: 0,\n        initialTypes: ['gltf'],\n        type: 'gltf'\n    },\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        //this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setClearColor(new THREE.Color('lightgrey'), 0);\n\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        this.threeRenderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.threeRenderer.domElement.style.position = 'absolute';\n        this.threeRenderer.domElement.style.top = '0px';\n        this.threeRenderer.domElement.style.left = '0px';\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n\n    setUp() {\n        bS = new BrowserStats();\n        glS = new glStats();\n        tS = new threeStats(this.renderer);\n\n        rS = new rStats({\n            CSSPath: './css/',\n            userTimingAPI: true,\n            values: {\n                frame: {\n                    caption: 'Total frame time (ms)',\n                    over: 16,\n                    average: true,\n                    avgMs: 100\n                },\n                fps: { caption: 'Framerate (FPS)', below: 30 },\n                calls: { caption: 'Calls (three.js)', over: 3000 },\n                raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n                rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n                texture: { caption: 'GenTex', average: true, avgMs: 100 }\n            },\n            groups: [\n                { caption: 'Framerate', values: ['fps', 'raf'] },\n                {\n                    caption: 'Frame Budget',\n                    values: ['frame', 'texture', 'setup', 'render']\n                }\n            ],\n            fractions: [{ base: 'frame', steps: ['texture', 'setup', 'render'] }],\n            plugins: [bS, tS]\n        });\n    }\n\n    static start() {\n        rS('frame').start();\n        glS.start();\n\n        rS('rAF').tick();\n        rS('FPS').frame();\n\n        rS('render').start();\n    }\n\n    static end() {\n        rS('render').end(); // render finished\n        rS('frame').end(); // frame finished\n\n        // Local rStats update\n        rS('rStats').start();\n        rS().update();\n        rS('rStats').end();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.rotation.x = -Math.PI / 2;\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.material.opacity = 0.5;\n        ground.receiveShadow = true;\n        markerGroup.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n        grid.position.set(0, 0, 0);\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        markerGroup.add(grid);\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nconst OBSTACLE_PREFIX = 'obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        this.scale = scene_scale;\n\n        if (callback != undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs != undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const mesh = new THREE.Mesh(geometry, material);\n\n        mesh.name = OBSTACLE_PREFIX + id;\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        window.markerGroup.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position != undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n            mesh.scale.set(this.scale, this.scale, this.scale);\n            mesh.position.set(this.scale * x, this.scale * z, -1 * this.scale * y);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation != undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = (x / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Enable shadows for the object\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        } else {\n            throw new TypeError('unsupported geometry type');\n        }\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        } else {\n            // Default material type\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height != undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius != undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            } else {\n                return 0;\n            }\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = window.markerGroup.getObjectByName(name);\n\n        if (obstacle != undefined) {\n            window.markerGroup.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = window.markerGroup.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                window.markerGroup.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        this.scale = scene_scale;\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else {\n            if (callback != null) callback('undefined');\n        }\n\n        return r;\n    }\n\n    create(id, x, y, heading, callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r == undefined) {\n            // Create only if not exists\n\n            // Limit the arena that robot can go\n            x = this.scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n            y = this.scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n            var loader = new STLLoader();\n            loader.load('./assets/models/model.stl', function (geometry, scene) {\n                const material = new THREE.MeshStandardMaterial({ color: 0x666666 });\n                const scale = window.scene_scale || 0.1;\n\n                console.log('scale', scale);\n                var r = new THREE.Mesh(geometry, material);\n                r.receiveShadow = true;\n                r.name = ROBOT_PREFIX + id;\n                r.scale.set(scale, scale, scale);\n                r.position.set(x, 0, -1 * y);\n                //r.rotation.x = -90 * THREE.Math.DEG2RAD;\n                r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n\n                window.markerGroup.add(r);\n\n                r.clickEvent = function (m) {\n                    window.robot.alert(m);\n                };\n\n                console.log('Created> Robot: id:', id, ' | x:', x, 'y:', y, 'heading:', heading);\n\n                // Callback function\n                if (callback != undefined) callback('success');\n            });\n        } else {\n            this.move(id, x, y, heading, () => {\n                if (callback != undefined) callback('already defined, so moved');\n            });\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else {\n                if (callback != undefined) callback('not found');\n            }\n        } else {\n            if (callback != undefined) callback('id not specified');\n        }\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = window.markerGroup.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                window.markerGroup.remove(obj[1]);\n            }\n        });\n    }\n\n    exists(id) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.z, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = this.scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = -1 * this.scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.z = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        } else {\n            if (callback != null) callback('undefined');\n        }\n    }\n\n    get_coordinates(id) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        } else {\n            return null;\n        }\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n\n        //alert(mesh.name);\n        //console.log(mesh)\n        let disp = document.querySelector('#msg-box');\n        disp.innerHTML = mesh.name;\n        disp.style.display = 'block';\n\n        setTimeout(function () {\n            document.querySelector('#msg-box').style.display = 'none';\n        }, 1000);\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport MQTT from 'paho-mqtt';\n\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n// -----------------------------------------------------------------------------\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO = 'localization/info';\n\n// Create and delete robot objects\nconst TOPIC_CREATE = 'robot/create';\nconst TOPIC_DELETE = 'robot/delete';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'management/visualizer';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene, markerGroup) {\n        this.markerGroup = markerGroup;\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n\n        // create a random client Id\n        const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n        this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n        window.mqtt = this.client;\n\n        this.client.connect({\n            userName: Config.mqtt.user,\n            password: Config.mqtt.password,\n            reconnect: true,\n            useSSL: true,\n            cleanSession: false,\n            onSuccess: () => {\n                console.log('MQTT: connected');\n\n                // Subscribe to topics\n                this.subscribe(TOPIC_LOC_INFO);\n                this.subscribe(TOPIC_CREATE);\n                this.subscribe(TOPIC_DELETE);\n                this.subscribe(TOPIC_CHANGE_COLOR);\n                this.subscribe(TOPIC_OBSTACLES_LIST);\n                this.subscribe(TOPIC_OBSTACLES_DELETE);\n                this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n\n                // Request for obstacle data\n                this.publish(TOPIC_OBSTACLE_REQUEST, '?');\n\n                // Request for coordinate data\n                this.publish(TOPIC_LOC_REQUEST, '?');\n\n                // Access globally\n                window.robot = this.robot;\n                window.obstacles = this.obstacles;\n\n                this.client.onMessageArrived = this.onMessageArrived;\n                this.client.onConnectionLost = this.onConnectionLost;\n            },\n            onFailure: () => {\n                console.log('MQTT: connection failed');\n            }\n        });\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            window.channel = channelHash.substring(1);\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_CREATE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO) {\n            //console.log('MQTT: ' + topic + ' > ' + msg);\n            try {\n                const data = JSON.parse(msg);\n\n                Object.entries(data).forEach((entry) => {\n                    // Update each robot\n                    const r = entry[1];\n\n                    if (window.robot.exists(r.id) == undefined) {\n                        window.robot.create(r.id, r.x, r.y, r.heading);\n                    } else {\n                        window.robot.move(r.id, r.x, r.y, r.heading);\n                    }\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'Refresh') {\n                console.log('page refresh request');\n                location.reload();\n            } else {\n                console.log('>Management:', msg);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\nimport * as THREEAR from 'threear';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Config data\nimport Config from './../data/config';\n\n// Helpers\nimport Stats from './helpers/stats';\n//import MeshHelper from './helpers/meshHelper';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// For click event on robots\nvar camera;\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        this.container = container;\n\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            // this.gui = new DatGUI(this)\n        }\n\n        // Main scene creation, and set global scale\n        window.scene = new THREE.Scene();\n        window.scene_scale = Config.scale;\n\n        // Renderer object\n        window.renderer = new Renderer(scene, container).threeRenderer;\n\n        // Apply fog\n        //scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        // init scene and camera\n        camera = new THREE.Camera();\n        // camera = new Camera(renderer); // Perspective camera giving an error\n        scene.add(camera);\n\n        // Create and place lights in scene\n        this.light = new Light(scene);\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        var markerGroup = new THREE.Group();\n        scene.add(markerGroup);\n        window.markerGroup = markerGroup;\n\n        var source = new THREEAR.Source({ renderer, camera });\n\n        this.mqtt = new MQTTClient(scene, markerGroup);\n\n        // Set up rStats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats(renderer);\n            this.stats.setUp();\n        }\n\n        THREEAR.initialize({ source: source }).then((controller) => {\n            // add a torus knot\n            // var geometry = new THREE.TorusKnotGeometry(0.3,0.1,64,16);\n            // var material = new THREE.MeshNormalMaterial();\n            // var torus = new THREE.Mesh( geometry, material );\n            // torus.position.y = 0.5\n            // markerGroup.add(torus);\n            //\n            // var geometry = new THREE.CubeGeometry(1,1,1);\n            // var material = new THREE.MeshNormalMaterial({\n            //     transparent : true,\n            //     opacity: 0.5,\n            //     side: THREE.DoubleSide\n            // });\n            // var cube = new THREE.Mesh( geometry, material );\n            // cube.position.y\t= geometry.parameters.height / 2;\n            // markerGroup.add(cube)\n\n            // -------------------------------------------------------\n            // Create the environment\n\n            this.environment = new Environment();\n\n            // -------------------------------------------------------\n\n            var patternMarker = new THREEAR.PatternMarker({\n                patternUrl: './assets/data/hiro.patt',\n                markerObject: markerGroup\n            });\n\n            controller.trackMarker(patternMarker);\n\n            // run the rendering loop\n            var lastTimeMsec = 0;\n            requestAnimationFrame(function animate(nowMsec) {\n                // keep looping\n                requestAnimationFrame(animate);\n                // measure time\n                lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n                var deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n                lastTimeMsec = nowMsec;\n\n                // call each update function\n                controller.update(source.domElement);\n\n                // cube.rotation.x += deltaMsec/10000 * Math.PI\n                //torus.rotation.y += deltaMsec/1000 * Math.PI\n                //torus.rotation.z += deltaMsec/1000 * Math.PI\n\n                // ----------------------\n                // Render rStats if Dev\n                if (Config.isDev && Config.isShowingStats) {\n                    Stats.start();\n                }\n\n                // Call render function and pass in created scene and camera\n                renderer.render(scene, camera);\n\n                // rStats has finished determining render call now\n                if (Config.isDev && Config.isShowingStats) {\n                    Stats.end();\n                }\n\n                // Delta time is sometimes needed for certain updates\n                //const delta = this.clock.getDelta();\n\n                // Call any vendor or module frame updates here\n                TWEEN.update();\n                //this.controls.threeControls.update();\n            });\n        });\n\n        this.container.querySelector('#loading').style.display = 'none';\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n    }\n\n    // constructor(container) {\n    //     // Set container property to container element\n    //     this.container = container;\n    //\n    //     // Start Three clock\n    //     this.clock = new THREE.Clock();\n    //\n    //     // Main scene creation\n    //     scene = new THREE.Scene();\n    //     window.scene = scene; // config as a global variable\n    //\n    //     scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n    //\n    //     this.mqtt = new MQTTClient(scene);\n    //\n    //     // Get Device Pixel Ratio first for retina\n    //     if (window.devicePixelRatio) {\n    //         Config.dpr = window.devicePixelRatio;\n    //     }\n    //\n    //     // Main renderer constructor\n    //     this.renderer = new Renderer(scene, container);\n    //\n    //     // Components instantiations\n    //     camera = new Camera(this.renderer.threeRenderer);\n    //\n    //     this.controls = new Controls(camera.threeCamera, container);\n    //     this.light = new Light(scene);\n    //\n    //     // Create and place lights in scene\n    //     const lights = ['ambient', 'directional', 'point', 'hemi'];\n    //     lights.forEach((light) => this.light.place(light));\n    //\n\n    //\n    //     // Instantiate texture class\n    //     this.texture = new Texture();\n    //\n    //     // Start loading the textures and then go on to load the model after the texture Promises have resolved\n    //     this.texture.load().then(() => {\n    //         this.manager = new THREE.LoadingManager();\n    //\n    //\n    //         // -----------------------------------------------------------------\n    //\n    //         // onProgress callback\n    //         this.manager.onProgress = (item, loaded, total) => {\n    //             // console.log(`${item}: ${loaded} ${total}`);\n    //         };\n    //\n    //         // All loaders done now\n    //         this.manager.onLoad = () => {\n    //             alert('Loaded');\n    //\n    //             // Set up interaction manager with the app now that the model is finished loading\n    //             new Interaction(\n    //                 this.renderer.threeRenderer,\n    //                 scene,\n    //                 camera.threeCamera,\n    //                 this.controls.threeControls\n    //             );\n    //\n    //             // Add dat.GUI controls if dev\n    //             if (Config.isDev) {\n    //                 this.meshHelper = new MeshHelper(scene, this.model.obj);\n    //                 if (Config.mesh.enableHelper) this.meshHelper.enable();\n    //                 //this.gui.load(this, this.model.obj);\n    //             }\n    //\n    //             // Everything is now fully loaded\n    //             Config.isLoaded = true;\n    //             this.container.querySelector('#loading').style.display = 'none';\n    //         };\n    //     });\n    //\n    //     // Start render which does not wait for model fully loaded\n    //\n    //     this.render();\n    //     this.container.querySelector('#loading').style.display = 'none';\n    //\n    //     // Add eventlistner for catch mouse click events\n    //     window.addEventListener('click', this.onDocumentMouseDown, false);\n    // }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            const obj = intersects[0].object;\n\n            if (obj.clickEvent != undefined) {\n                obj.clickEvent(obj);\n            }\n        }\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}