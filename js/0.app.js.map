{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/label.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/helpers/coordinateTransform.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/helpers/urlHelper.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","resolvedConfig","config","arena","size","minX","maxX","minY","maxY","offsets","showZeroMarker","showCoordMarker","scaleRange","mqtt","server","localStorage","getItem","port","path","channel","mixedReality","obstacles","robots","selectedReality","selectedRealities","real","virtual","hiddenOpacity","isDev","isShowingStats","isShowingLables","labelsVisibility","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","storedConfig","location","href","JSON","parse","saveConfig","data","setItem","stringify","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","threeRenderer","antialias","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","shadowMap","Config","capabilities","getMaxAnisotropy","updateSize","offsetWidth","offsetHeight","render","addLabel","prefix","visibility","className","textContent","marginTop","elementLabel","CSS2DObject","visible","removeLabel","remove","Light","init","castShadow","mapSize","height","directionalLightHelper","lightName","transformPosition","abs","transformScale","scaleX","scaleY","scaleZ","transformRotation","rotX","rotY","rotZ","rS","bS","glS","tS","Environment","log","scene_scale","geometry","depthWrite","ground","rotation","opacity","receiveShadow","markerGroup","grid","transparent","zeroGeometry","zeroMarker","markerGeometry","coordMarker","Stats","renderer","start","tick","frame","end","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","DatGUI","main","gui","dat","GUI","useLocalStorage","realityFolder","parseInt","addFolder","listen","onChange","toggleReality","placeFolder","updateCoord","open","objects","Array","isArray","variable","startsWith","children","reality","selected","entries","forEach","obj","pos","destroy","Obstacle","callback","obs","obstacle","createGeometry","createMaterial","userData","originalColor","labelVisibility","originalEmmisive","getHex","floor","random","name_temp","toString","substring","deleteIfExists","calculateZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","STLLoader","require","Robot","R","G","B","r","setRGB","heading","REALITY","loader","load","robotId","clickEvent","robot","alert","error","setReality","currentHeading","newHeading","DEG2RAD","rotationFlag","round","Tween","to","onUpdate","onComplete","delay","Promise","resolve","reject","publish","nodeContent","disp","querySelector","prevContent","getElementById","content","setAttribute","createTextNode","requestSnapshot","replaceChild","display","setTimeout","jwt","getUrlParam","parameter","defaultvalue","vars","urlparameter","indexOf","replace","key","getCredentials","storedCredentials","username","password","origin","pathname","history","pushState","title","verify","token","err","decodeKey","MQTTClient","updateChannel","credentials","client_id","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","channelHash","hash","split","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","t","destinationName","topic","i","exists","move","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","Main","light","place","source","THREEAR","stats","labelRenderer","CSS2DRenderer","isShowingObstacleLables","isShowingRobotLables","Label","then","controller","environment","show","patternMarker","patternUrl","markerObject","trackMarker","lastTimeMsec","requestAnimationFrame","animate","nowMsec","hidden","onDocumentMouseDown","Detector"],"mappings":"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","file":"0.app.js","sourcesContent":["module.exports = function (THREE) {\n    var MOUSE = THREE.MOUSE;\n    if (!MOUSE) MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    /*global THREE, console */\n\n    function OrbitConstraint(object) {\n        this.object = object;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        // and where it pans with respect to.\n        this.target = new THREE.Vector3();\n\n        // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // Limits to how far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var EPS = 0.000001;\n\n        // Current position in spherical coordinate system.\n        var theta;\n        var phi;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // API\n\n        this.getPolarAngle = function () {\n            return phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n\n        this.rotateLeft = function (angle) {\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n            phiDelta -= angle;\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = (function () {\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in distance in world space to move up\n        this.panUp = (function () {\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                scope.panLeft((2 * deltaX * targetDistance) / screenHeight);\n                scope.panUp((2 * deltaY * targetDistance) / screenHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                // orthographic\n                scope.panLeft((deltaX * (scope.object.right - scope.object.left)) / screenWidth);\n                scope.panUp((deltaY * (scope.object.top - scope.object.bottom)) / screenHeight);\n            } else {\n                // camera neither orthographic or perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            }\n        };\n\n        this.dollyIn = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.dollyOut = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.update = (function () {\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat.clone().inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n                var position = this.object.position;\n\n                offset.copy(position).sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n\n                theta = Math.atan2(offset.x, offset.z);\n\n                // angle from y-axis\n\n                phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n                theta += thetaDelta;\n                phi += phiDelta;\n\n                // restrict theta to be between desired limits\n                theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this.target.add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(this.target).add(offset);\n\n                this.object.lookAt(this.target);\n\n                if (this.enableDamping === true) {\n                    thetaDelta *= 1 - this.dampingFactor;\n                    phiDelta *= 1 - this.dampingFactor;\n                } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(this.object.position) > EPS ||\n                    8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n    }\n\n    // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n    // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n    // supported.\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n    function OrbitControls(object, domElement) {\n        var constraint = new OrbitConstraint(object);\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // API\n\n        Object.defineProperty(this, 'constraint', {\n            get: function () {\n                return constraint;\n            }\n        });\n\n        this.getPolarAngle = function () {\n            return constraint.getPolarAngle();\n        };\n\n        this.getAzimuthalAngle = function () {\n            return constraint.getAzimuthalAngle();\n        };\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // center is old, deprecated; use \"target\" instead\n        this.center = this.target;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        // for reset\n\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // events\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n        }\n\n        this.update = function () {\n            if (this.autoRotate && state === STATE.NONE) {\n                constraint.rotateLeft(getAutoRotationAngle());\n            }\n\n            if (constraint.update() === true) {\n                this.dispatchEvent(changeEvent);\n            }\n        };\n\n        this.reset = function () {\n            state = STATE.NONE;\n\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n\n            this.update();\n        };\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.enableRotate === false) return;\n\n                state = STATE.ROTATE;\n\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.enableZoom === false) return;\n\n                state = STATE.DOLLY;\n\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.enablePan === false) return;\n\n                state = STATE.PAN;\n\n                panStart.set(event.clientX, event.clientY);\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (state === STATE.ROTATE) {\n                if (scope.enableRotate === false) return;\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n            } else if (state === STATE.DOLLY) {\n                if (scope.enableZoom === false) return;\n\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    constraint.dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n                    constraint.dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.enablePan === false) return;\n\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n            }\n\n            if (state !== STATE.NONE) scope.update();\n        }\n\n        function onMouseUp(/* event */) {\n            if (scope.enabled === false) return;\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n            if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var delta = 0;\n\n            if (event.wheelDelta !== undefined) {\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                // Firefox\n\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                constraint.dollyOut(getZoomScale());\n            } else if (delta < 0) {\n                constraint.dollyIn(getZoomScale());\n            }\n\n            scope.update();\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n            switch (event.keyCode) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n            }\n        }\n\n        function touchstart(event) {\n            if (scope.enabled === false) return;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    dollyStart.set(0, distance);\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n\n                    state = STATE.TOUCH_PAN;\n\n                    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n        }\n\n        function touchmove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n                    if (state !== STATE.TOUCH_ROTATE) return;\n\n                    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                    // rotating across whole screen goes 360 degrees around\n                    constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                    rotateStart.copy(rotateEnd);\n\n                    scope.update();\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n                    if (state !== STATE.TOUCH_DOLLY) return;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n\n                    dollyEnd.set(0, distance);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                    if (dollyDelta.y > 0) {\n                        constraint.dollyOut(getZoomScale());\n                    } else if (dollyDelta.y < 0) {\n                        constraint.dollyIn(getZoomScale());\n                    }\n\n                    dollyStart.copy(dollyEnd);\n\n                    scope.update();\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n                    if (state !== STATE.TOUCH_PAN) return;\n\n                    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    panDelta.subVectors(panEnd, panStart);\n\n                    pan(panDelta.x, panDelta.y);\n\n                    panStart.copy(panEnd);\n\n                    scope.update();\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function touchend(/* event */) {\n            if (scope.enabled === false) return;\n\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n\n        this.dispose = function () {\n            this.domElement.removeEventListener('contextmenu', contextmenu, false);\n            this.domElement.removeEventListener('mousedown', onMouseDown, false);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n            this.domElement.removeEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n            this.domElement.removeEventListener('touchstart', touchstart, false);\n            this.domElement.removeEventListener('touchend', touchend, false);\n            this.domElement.removeEventListener('touchmove', touchmove, false);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            window.removeEventListener('keydown', onKeyDown, false);\n        };\n\n        this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n        this.domElement.addEventListener('mousedown', onMouseDown, false);\n        this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n        this.domElement.addEventListener('touchstart', touchstart, false);\n        this.domElement.addEventListener('touchend', touchend, false);\n        this.domElement.addEventListener('touchmove', touchmove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n        this.update();\n    }\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n        object: {\n            get: function () {\n                return this.constraint.object;\n            }\n        },\n\n        target: {\n            get: function () {\n                return this.constraint.target;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: target is now immutable. Use target.set() instead.');\n                this.constraint.target.copy(value);\n            }\n        },\n\n        minDistance: {\n            get: function () {\n                return this.constraint.minDistance;\n            },\n\n            set: function (value) {\n                this.constraint.minDistance = value;\n            }\n        },\n\n        maxDistance: {\n            get: function () {\n                return this.constraint.maxDistance;\n            },\n\n            set: function (value) {\n                this.constraint.maxDistance = value;\n            }\n        },\n\n        minZoom: {\n            get: function () {\n                return this.constraint.minZoom;\n            },\n\n            set: function (value) {\n                this.constraint.minZoom = value;\n            }\n        },\n\n        maxZoom: {\n            get: function () {\n                return this.constraint.maxZoom;\n            },\n\n            set: function (value) {\n                this.constraint.maxZoom = value;\n            }\n        },\n\n        minPolarAngle: {\n            get: function () {\n                return this.constraint.minPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minPolarAngle = value;\n            }\n        },\n\n        maxPolarAngle: {\n            get: function () {\n                return this.constraint.maxPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxPolarAngle = value;\n            }\n        },\n\n        minAzimuthAngle: {\n            get: function () {\n                return this.constraint.minAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minAzimuthAngle = value;\n            }\n        },\n\n        maxAzimuthAngle: {\n            get: function () {\n                return this.constraint.maxAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxAzimuthAngle = value;\n            }\n        },\n\n        enableDamping: {\n            get: function () {\n                return this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                this.constraint.enableDamping = value;\n            }\n        },\n\n        dampingFactor: {\n            get: function () {\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                this.constraint.dampingFactor = value;\n            }\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                return !this.enableZoom;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                this.enableZoom = !value;\n            }\n        },\n\n        noRotate: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                return !this.enableRotate;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                this.enableRotate = !value;\n            }\n        },\n\n        noPan: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                return !this.enablePan;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                this.enablePan = !value;\n            }\n        },\n\n        noKeys: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                return !this.enableKeys;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                this.enableKeys = !value;\n            }\n        },\n\n        staticMoving: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                return !this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                this.constraint.enableDamping = !value;\n            }\n        },\n\n        dynamicDampingFactor: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.constraint.dampingFactor = value;\n            }\n        }\n    });\n\n    return OrbitControls;\n};\n","import TWEEN from '@tweenjs/tween.js';\n\nlet resolvedConfig;\n\n// This object contains the state of the app\nconst config = {\n    scale: 0.015,\n    arena: {\n        size: 180,\n        minX: -85,\n        maxX: 85,\n        minY: -85,\n        maxY: 85\n    },\n    offsets:{\n        x: 0,\n        y: 80,\n        z: 150,\n        showZeroMarker: true,\n        showCoordMarker: false,\n        scaleRange: 360\n    },\n    mqtt: {\n        server: localStorage.getItem('pera-swarm-server') || 'webservices.ceykod.com',\n        port: localStorage.getItem('pera-swarm-port') || 8883,\n        path: '/mqtt',\n        channel: localStorage.getItem('pera-swarm-channel') || 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    selectedReality: 'M',\n    selectedRealities: {\n        real: true,\n        virtual: true\n    },\n    hiddenOpacity: 0.15,\n    isDev: true,\n    isShowingStats: true,\n    isShowingLables: true,\n    labelsVisibility: {\n        obstacles: false,\n        robots: false\n    },\n    isShowingRobotSnapshots: true,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n\n// Check localstorage for updated config, if not use above config\nconst storedConfig = localStorage.getItem(document.location.href + '.config');\nresolvedConfig = storedConfig !== null && storedConfig !== undefined ? JSON.parse(storedConfig) : config;\n\n// method to presist config data with localStorage\nexport const saveConfig = (data) => {\n    localStorage.setItem(document.location.href + '.config', JSON.stringify({ ...config, ...data }));\n};\n\nexport default resolvedConfig;\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        //this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setClearColor(new THREE.Color('lightgrey'), 0);\n\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        this.threeRenderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.threeRenderer.domElement.style.position = 'absolute';\n        this.threeRenderer.domElement.style.top = '0px';\n        this.threeRenderer.domElement.style.left = '0px';\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport Config from '../../data/config';\n\nexport default function () {\n    const renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.isShowingLables = Config.isShowingLables;\n    renderer.isShowingObstacleLables = Config.labelsVisibility.obstacles;\n    renderer.isShowingRobotLables = Config.labelsVisibility.robots;\n    renderer.updateSize = function () {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    document.addEventListener('DOMContentLoaded', () => renderer.updateSize(), false);\n    window.addEventListener('resize', () => renderer.updateSize(), false);\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh, visibility) => {\n    if (mesh !== undefined) {\n        const element = document.createElement('div');\n        element.className = 'label';\n\n        // TODO: use names, insted of IDs\n        element.textContent = object.name;\n\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        elementLabel.visible = visibility;\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        };\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if (mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import Config from '../../data/config';\n\nexport function transformPosition(x,y,z, scale) {\n    const tx = 0.01*Config.offsets.x + scale*(x);\n    const ty = 0.01*Config.offsets.y + scale*(-y + Math.abs(Config.arena.minY) );  // actual Y axis\n    const tz = 0.01*Config.offsets.z + scale*(-z); // actual Z axis\n\n    return {posX: tx, posY:ty, posZ:tz};\n}\nexport function transformScale(scale) {\n    return {scaleX:scale, scaleY:scale, scaleZ:scale};\n}\n\nexport function transformRotation(x,y,z) {\n    return {rotX:x-Math.PI / 2, rotY:y, rotZ:z};\n}\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n\n    setUp() {\n        bS = new BrowserStats();\n        glS = new glStats();\n        tS = new threeStats(this.renderer);\n\n        rS = new rStats({\n            CSSPath: './css/',\n            userTimingAPI: true,\n            values: {\n                frame: {\n                    caption: 'Total frame time (ms)',\n                    over: 16,\n                    average: true,\n                    avgMs: 100\n                },\n                fps: { caption: 'Framerate (FPS)', below: 30 },\n                calls: { caption: 'Calls (three.js)', over: 3000 },\n                raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n                rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n                texture: { caption: 'GenTex', average: true, avgMs: 100 }\n            },\n            groups: [\n                { caption: 'Framerate', values: ['fps', 'raf'] },\n                {\n                    caption: 'Frame Budget',\n                    values: ['frame', 'texture', 'setup', 'render']\n                }\n            ],\n            fractions: [{ base: 'frame', steps: ['texture', 'setup', 'render'] }],\n            plugins: [bS, tS]\n        });\n    }\n\n    static start() {\n        rS('frame').start();\n        glS.start();\n\n        rS('rAF').tick();\n        rS('FPS').frame();\n\n        rS('render').start();\n    }\n\n    static end() {\n        rS('render').end(); // render finished\n        rS('frame').end(); // frame finished\n\n        // Local rStats update\n        rS('rStats').start();\n        rS().update();\n        rS('rStats').end();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}, arenaSize:${Config.arena.size}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        // var material = new THREE.MeshPhongMaterial({\n        var material = new THREE.MeshStandardMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n\n        const {posX, posY, posZ } = transformPosition(0,0,0, scene_scale);\n        const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n        const {scaleX, scaleY, scaleZ } = transformScale(scene_scale);\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.rotation.set(rotX-Math.PI / 2, rotY, rotZ);\n        ground.position.set(posX, posY, posZ);\n        ground.scale.set(scaleX, scaleY, scaleZ);\n        ground.material.opacity = 0.35;\n        ground.receiveShadow = true;\n        markerGroup.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 18, 0x000000, 0x5b5b5b);\n        grid.rotation.set(rotX, rotY, rotZ);\n        grid.position.set(posX, posY, posZ);\n        grid.scale.set(scaleX, scaleY, scaleZ);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        markerGroup.add(grid);\n\n        // Zero marker\n        const zeroGeometry = new THREE.SphereGeometry(scene_scale*5, 16, 16);\n        const zeroMarker = new THREE.Mesh( zeroGeometry, new THREE.MeshBasicMaterial( {color: 0xffff00} ) );\n        zeroMarker.visible = Config.offsets.showZeroMarker;\n        markerGroup.add(zeroMarker);\n        window.zeroMarker = zeroMarker\n\n        const markerGeometry = new THREE.SphereGeometry(5, 16, 16);\n        const coordMarker = new THREE.Mesh( markerGeometry,new THREE.MeshBasicMaterial({color: 0xff0000}));\n        coordMarker.position.set(posX, posY, posZ);\n        coordMarker.scale.set(scene_scale, scene_scale, scene_scale);\n\n        coordMarker.name = \"coordinateMarker\";\n        coordMarker.visible = Config.offsets.showCoordMarker;\n        markerGroup.add(coordMarker);\n        window.coordMarker = coordMarker\n    }\n}\n","import Config, { saveConfig } from '../../data/config';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\n// COMMENT(NuwanJ)\n// Store the last state of the toggles in the window.localStorage\n// Refer: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n// Refer: https://github.com/dataarts/dat.gui/blob/master/API.md#GUI+useLocalStorage\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.gui.useLocalStorage = true;\n\n        // this.camera = main.camera.threeCamera;\n        // this.controls = main.controls.threeControls;\n        // this.light = main.light;\n    }\n\n    load(main, mesh) {\n\n        const offsetRange = parseInt(Config.offsets.scaleRange);\n\n        // ---------------------------------------------------------------------\n        // Robot Snapshots\n        // this.gui\n        // .add(Config, 'isShowingRobotSnapshots')\n        // .name('Robot Snapshots')\n        // .onChange((value) => {\n        //     Config.isShowingRobotSnapshots = value;\n        //     saveConfig(Config);\n        // });\n\n        // ---------------------------------------------------------------------\n        // labelsFolder\n\n        // const labelsFolder = this.gui.addFolder('Labels');\n        // labelsFolder\n        // .add(Config, 'isShowingLables')\n        // .name('All Labels')\n        // .onChange((value) => {\n        //     Config.isShowingLables = value;\n        //     Config.labelsVisibility = {\n        //         obstacles: value,\n        //         robots: value\n        //     };\n        //     saveConfig(Config);\n        // });\n        // .add(Config.labelsVisibility, 'obstacles')\n        // .name('Obstacle Labels')\n        // .onChange((value) => {\n        //     // this.toggleLabels(this.scene.children, 'Obstacle', value);\n        //     // alert('Obstacle Label');\n        //     this.toggleLabels(window.markerGroup.children, 'Obstacle', value);\n        // });\n        // labelsFolder\n        // .add(Config.labelsVisibility, 'robots')\n        // .name('Robot Labels')\n        // .onChange((value) => {\n        //     // this.toggleLabels(this.scene.children, 'Robot', value);\n        //     // alert('Robot Label');\n        //     this.toggleLabels(window.markerGroup.children, 'Robot', value);\n        // });\n\n        // ---------------------------------------------------------------------\n        /* Reality Folder */\n        const realityFolder = this.gui.addFolder('Reality');\n\n        realityFolder\n        .add(Config.selectedRealities, 'real')\n        .name('Physical Reality')\n        .listen()\n        .onChange((value) => {\n            this.toggleReality('real', 'R');\n            saveConfig(Config);\n        });\n        realityFolder\n        .add(Config.selectedRealities, 'virtual')\n        .name('Virtual Reality')\n        .listen()\n        .onChange((value) => {\n            this.toggleReality('virtual', 'V');\n            saveConfig(Config);\n        });\n\n        // ---------------------------------------------------------------------\n        const placeFolder = this.gui.addFolder('Placement');\n\n        // Toggle visibility of Zero marker (yellow)\n        placeFolder\n        .add(Config.offsets, 'showZeroMarker')\n        .name('Zero Marker')\n        .listen()\n        .onChange((value) => {\n            saveConfig(Config);\n            window.zeroMarker.visible = value;\n        });\n\n        // Toggle visibility of Coord marker (red)\n        placeFolder\n        .add(Config.offsets, 'showCoordMarker')\n        .name('Coordinate Marker')\n        .listen()\n        .onChange((value) => {\n            saveConfig(Config);\n            window.coordMarker.visible = value;\n        });\n        // ---------------------------------------------------------------------\n        // X Offset\n        placeFolder\n        .add(Config.offsets, 'x')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('X Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.x = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Y Offset\n        placeFolder\n        .add(Config.offsets, 'y')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('Y Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.y = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Z Offset\n        placeFolder\n        .add(Config.offsets, 'z')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('Z Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.z = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Scale Offset\n        placeFolder\n        .add(Config, 'scale', 0, 0.05)\n        .name('Scale')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.scale = value\n            window.coordMarker.scale.set(value,value,value);\n            saveConfig(Config);\n        });\n\n        /* Global */\n        this.gui.open();\n        // this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n    }\n\n    toggleLabels(objects, type, value) {\n        saveConfig(Config);\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (var variable of objects) {\n                if (variable.name.startsWith(type)) {\n                    variable.children[0].visible = value;\n                }\n            }\n        }\n    }\n\n    toggleReality(reality, selected) {\n        // by default visualizer will intercept all the communication coming to the channel regardless of the reality.\n        // this control panel will only toggle the 'visibility' of objects in the selected realities.\n        const objects = window.markerGroup.children;\n\n        saveConfig(Config);\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            const reality = obj[1]['reality'];\n\n            if (reality !== undefined && reality === 'R') {\n                // obj[1].transparent = Config.selectedRealities.real;\n                obj[1].material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n            } else if (reality !== undefined && reality === 'V') {\n                // obj[1].transparent = Config.selectedRealities.virtual;\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n            }\n        });\n    }\n\n\n    updateCoord(){\n        const pos = window.coordMarker.position;\n        const {posX, posY, posZ } = transformPosition(pos.x,pos.y,pos.z, scene_scale);\n        window.coordMarker.position.set(posX, posY, posZ);\n    }\n\n    show() {\n        // this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        this.scale = scene_scale;\n\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) callback();\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n\n        material.userData.originalColor = new THREE.Color(0x666666);\n        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.obstacles;\n        material.userData.originalEmmisive = material.emissive.getHex();\n        material.selected = false;\n        material.transparent = true;\n\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n        const reality = obstacle.reality == undefined ? 'V' : obstacle.reality;\n        const mesh = new THREE.Mesh(geometry, material);\n\n        // TODO: add the name defined in env.config.json as discussed on 2021-02-18\n        //      Need some obstacle protocol revision + simulator updates\n        const name_temp = 'Obs_' + id.toString().substring(0, 8) + '...';\n\n        mesh.name = OBSTACLE_PREFIX + id;\n        mesh.reality = reality; // set reality flag\n\n        if (mesh.reality === 'V') {\n            // material.visible = Config.selectedRealities.virtual;\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n        } else if (mesh.reality === 'R') {\n            // material.visible = Config.selectedRealities.real;\n            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n        }\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        window.markerGroup.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            const {posX, posY, posZ } = transformPosition(x,y,z, this.scale);\n            const {scaleX, scaleY, scaleZ } = transformScale(this.scale);\n\n            mesh.position.set(posX, posY, posZ);\n            mesh.scale.set(scaleX, scaleY, scaleZ);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation != undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = (x / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            const {rotX, rotY, rotZ } = transformRotation(radX, radY, radZ);\n            mesh.rotation.set(rotX, rotY,rotZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels to every obstacle, immediately displayed if enabled\n        addLabel(OBSTACLE_PREFIX, { id: obstacle.id, name: name_temp }, mesh, Config.labelsVisibility.obstacles);\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        }\n        throw new TypeError('unsupported geometry type');\n\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n        // Default material type\n        return new THREE.MeshStandardMaterial(m.properties);\n\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            }\n            return 0;\n\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = window.markerGroup.getObjectByName(name);\n\n        if (obstacle !== undefined) {\n            window.markerGroup.remove(obstacle);\n            removeLabel(obj[1]);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = window.markerGroup.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                window.markerGroup.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'Robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        this.scale = scene_scale;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r !== undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n            if (callback !== null) callback('success');\n        } else if (callback !== null) callback('undefined');\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V',callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r === undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n\n                // Limit the arena that robot can go\n                x = Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n                const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    const material = new THREE.MeshStandardMaterial(\n                        { color: 0x666666,opacity: opacity,transparent: true });\n                        material.userData.originalColor = new THREE.Color(0x666666);\n                        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.robots;\n                        material.selected = false;\n\n                        const scale = window.scene_scale || 0.1;\n\n                        const {posX, posY, posZ } = transformPosition(x,y, 0, scale);\n                        const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n                        const {scaleX, scaleY, scaleZ } = transformScale(scale);\n\n                        // console.log('scale', scale);\n                        var r = new THREE.Mesh(geometry, material);\n                        r.receiveShadow = true;\n                        r.robotId = id;\n                        r.name = ROBOT_PREFIX + id;\n                        r.scale.set(scaleX, scaleY, scaleZ);\n                        r.position.set(posX, posY, posZ);\n                        r.rotation.set(rotX, rotY, rotZ ); //.y = (heading - 90) * THREE.Math.DEG2RAD;\n                        r.reality = reality; // set reality flag\n\n                        if (reality === 'V') {\n                            // material.visible = Config.selectedRealities.virtual;\n                            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n                        } else if (reality === 'R') {\n                            // material.visible = Config.selectedRealities.real;\n                            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n                        }\n\n                        window.markerGroup.add(r);\n\n                        r.clickEvent = function (m) {\n                            window.robot.alert(m);\n                        };\n\n                        // Add labels to every robot, immediately displayed if enabled\n                        addLabel(ROBOT_PREFIX, { id, name: r.name }, r, Config.labelsVisibility.robots);\n\n                        console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                        // Callback function\n                        if (callback !== undefined) callback('success');\n                    });\n                } else {\n                    console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n                }\n\n            }else if (reality === REALITY || REALITY === 'M') {\n                // Reality matches\n\n                this.setReality(id, reality);\n                // Callback function\n                if (callback !== undefined) callback('success');\n\n            }else{\n                // Robot reality not matching with environment reality\n                this.delete(id);\n                // Callback function\n                if (callback !== undefined) callback('deleted');\n            }\n            return r;\n        }\n\n        delete(id, callback) {\n            if (id !== undefined) {\n                var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n\n                if (r !== undefined) {\n                    scene.remove(r);\n                    console.log('Deleted> id:', id);\n                    removeLabel(obj[1]);\n                    if (callback !== undefined) callback('success');\n                } else if (callback !== undefined) callback('not found');\n            } else if (callback !== undefined) callback('id not specified');\n        }\n\n        deleteAll() {\n            // Delete all robots\n            const objects = window.markerGroup.children;\n\n            Object.entries(objects).forEach((obj) => {\n                const name = obj[1]['name'];\n\n                if (name.startsWith(ROBOT_PREFIX)) {\n                    console.log('Deleted>', name);\n                    removeLabel(obj[1]);\n                    window.markerGroup.remove(obj[1]);\n                }\n            });\n        }\n\n        exists(id) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            return r;\n        }\n\n        move(id, x, y, heading, callback) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            if (r !== undefined) {\n                const currentHeading = r.rotation.y;\n                const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n                var position = { x: r.position.x, y: r.position.z, heading: r.rotation.y };\n\n                // TODO: need a smoother way than this rough trick\n                // If current and target rotations in different signs\n                const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n                // Limit the arena that robot can go\n                x = Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n                y = Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n                heading = Math.round(heading * 10) / 10;\n\n                const {posX, posY, posZ } = transformPosition(x,y, 0, scale);\n                const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n\n                // const speed = 10;\n                const distance = Math.sqrt(Math.pow(posX - position.x, 2) + Math.pow(posY - position.y, 2));\n\n                const moveTime = 1; //distance / speed;\n                // TODO: If distance is 0, need to handle only the rotation\n\n                if (distance !== 0) {\n                    var tween = new TWEEN.Tween(position)\n                    .to({ x: posX, y: posY, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n                } else {\n                    // No move, only the rotation\n                    r.rotation.y = newHeading;\n                }\n                return r;\n            } else {\n                if (callback != null) callback('undefined');\n            }\n        }\n\n        get_coordinates(id) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            if (r !== undefined) {\n                console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n                return r;\n            }\n            return null;\n        }\n\n        update() {\n            TWEEN.update();\n        }\n\n        requestSnapshot(mesh) {\n            return new Promise((resolve, reject) => {\n                // TODO: Review this\n                const req = window.mqtt.publish(\n                    window.channel + '/mgt/robots/snapshot',\n                    JSON.stringify({ id: mesh.robotId })\n                );\n                resolve(!req);\n            });\n        }\n\n        alert(mesh) {\n            // Display an alert on window\n            const disp = document.querySelector('#msg-box');\n            const prevContent = document.getElementById('msg-content');\n            let content = document.createElement('div');\n            content.setAttribute('id', 'msg-content');\n            let nodeContent;\n            if (Config.isShowingRobotSnapshots) {\n                nodeContent = document.createTextNode(`${mesh.name} Snapshot Loading...`);\n                this.requestSnapshot(mesh);\n            } else {\n                nodeContent = document.createTextNode(`${mesh.name}`);\n            }\n            content.appendChild(nodeContent);\n            disp.replaceChild(content, prevContent);\n            disp.style.display = 'block';\n            setTimeout(function () {\n                disp.style.opacity = '1.0';\n                disp.style.display = 'none';\n            }, 10000);\n        }\n    }\n","let jwt = require('jsonwebtoken');\n\nfunction getUrlVars() {\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    return vars;\n}\n\nfunction getUrlParam(parameter, defaultvalue) {\n    var urlparameter = defaultvalue;\n    if (window.location.href.indexOf(parameter) > -1) {\n        urlparameter = getUrlVars()[parameter];\n    }\n    return urlparameter;\n}\n\nexport function getCredentials() {\n    // TODO: Add channel, host and port into URL (as optional parameters)\n    // Suggestion: Use JWT insted of exposed credentials\n    // Simulator server can provide the JWT token\n\n    const storedCredentials = localStorage.getItem('pera-swarm-credentials');\n\n    const username = getUrlParam('username', false);\n    const password = getUrlParam('password', false);\n    const key = getUrlParam('key', false);\n    const channel = getUrlParam('channel', false);\n    const port = getUrlParam('port', false);\n    const server = getUrlParam('server', false);\n\n    clearParams();\n\n    setTimeout(() => {\n        if (server !== false) {\n            localStorage.setItem('pera-swarm-server', server);\n        }\n        if (channel !== false) {\n            localStorage.setItem('pera-swarm-channel', channel);\n        }\n        if (port !== false) {\n            localStorage.setItem('pera-swarm-port', port);\n        }\n        if (key !== false) {\n            localStorage.setItem('pera-swarm-key', key);\n        }\n    }, 2000);\n\n    if (username === false && password === false && storedCredentials !== null) {\n        return JSON.parse(storedCredentials);\n\n    } else if (username !== false && password !== false) {\n        localStorage.setItem('pera-swarm-credentials',\n            JSON.stringify({\n                username,\n                password\n            })\n        );\n        return {\n            username,\n            password\n        };\n    } else if (key !== false) {\n        // decode the api key\n        return decodeKey(key);\n    } else {\n        return -1;\n    }\n\n}\n\nfunction clearParams() {\n    const path = window.location.origin + window.location.pathname;\n    window.history.pushState({}, document.title, path);\n}\n\nfunction decodeKey() {\n    try {\n        let decoded = jwt.verify(token, 'swarm-visualizer-secret');\n        return decoded;\n    } catch (err) {\n        // err\n        console.log('Token Error');\n        return -1;\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport MQTT from 'paho-mqtt';\n\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\nimport { getCredentials } from '../helpers/urlHelper';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n// -----------------------------------------------------------------------------\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO = 'localization/info';\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// Robot management snapshot topic\nconst TOPIC_MANAGEMENT_SNAPSHOT = 'mgt/robots/?';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene, markerGroup) {\n        this.markerGroup = markerGroup;\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n        const credentials = getCredentials();\n\n        if (credentials === -1) {\n            alert('Unauthorized access! The Visualizer will not work properly.');\n        } else {\n            const { username, password } = credentials;\n            // create a random client Id\n            const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n            this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n            window.mqtt = this.client;\n\n            this.client.connect({\n                userName: username,\n                password: password,\n                reconnect: true,\n                useSSL: true,\n                cleanSession: false,\n                onSuccess: () => {\n                    console.log('MQTT: connected');\n\n                    // Subscribe to topics\n                    this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                    this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                    this.subscribe(TOPIC_ROBOT_CREATE);\n                    this.subscribe(TOPIC_ROBOT_DELETE);\n                    this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                    this.subscribe(TOPIC_CHANGE_COLOR);\n                    this.subscribe(TOPIC_OBSTACLES_LIST);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                    this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n                    this.subscribe(TOPIC_MANAGEMENT_SNAPSHOT);\n\n                    // Request for obstacle data\n                    this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n\n                    // Request for coordinate data\n                    this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                    // Access globally\n                    window.robot = this.robot;\n                    window.obstacles = this.obstacles;\n\n                    this.client.onMessageArrived = this.onMessageArrived;\n                    this.client.onConnectionLost = this.onConnectionLost;\n                },\n                onFailure: () => {\n                    console.log('MQTT: connection failed');\n                    alert('MQTT: connection failed!');\n                }\n            });\n        }\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            // window.channel = channelHash.substring(1);\n            window.channel = channelHash.split('#')[1].split('?')[0];\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel, channelHash);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n\n            try {\n                const data = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined) {\n                    // Have data on this reality\n                    for (const i in data) {\n                        const { id, x, y, heading } = data[i];\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\n\n                        if (reality === REALITY || REALITY === 'M') {\n                            // Create only if robots match with platform's allowed reality\n                            if (window.robot.exists(id) == undefined) {\n                                window.robot.create(id, x, y, heading, reality);\n                            } else {\n                                window.robot.move(id, x, y, heading);\n                                window.robot.setReality(id, reality);\n                            }\n                        } else {\n                            // reality not matching; remove\n                            robot.delete(id);\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n            window.obstacles.deleteIfExists(data.id);\n\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B);\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n\n        } else if (msg.startsWith('MSG')) {\n            const m = 'Notice: ' + msg.substring(4);\n            const t = 2000 + m.length * 95;\n\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n            const disp = document.querySelector('#msg-box');\n            disp.innerHTML = m;\n            disp.style.display = 'block';\n\n            setTimeout(function () {\n                document.querySelector('#msg-box').style.display = 'none';\n            }, t);\n        } else {\n        }\n\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\nimport * as THREEAR from 'threear';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport Label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Config data\nimport Config from './../data/config';\n\n// Helpers\nimport Stats from './helpers/stats';\n//import MeshHelper from './helpers/meshHelper';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Global Variables\nlet camera, labelRenderer, INTERSECTED, selectedLabel;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        this.container = container;\n\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            // this.gui = new DatGUI(this)\n        }\n\n        // Main scene creation, and set global scale\n        window.scene = new THREE.Scene();\n        window.scene_scale = Config.scale;\n\n        // High level reality flag\n        window.selectedReality = Config.selectedReality;\n\n        // Renderer object\n        window.renderer = new Renderer(scene, container).threeRenderer;\n\n        // Apply fog\n        //scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        // init scene and camera\n        camera = new THREE.Camera();\n        // camera = new Camera(renderer); // Perspective camera giving an error\n        scene.add(camera);\n\n        // Create and place lights in scene\n        this.light = new Light(scene);\n        this.camera = camera;\n\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        var markerGroup = new THREE.Group();\n        scene.add(markerGroup);\n        window.markerGroup = markerGroup;\n\n        var source = new THREEAR.Source({ renderer, camera });\n\n        this.mqtt = new MQTTClient(scene, markerGroup);\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            // this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            this.labelRenderer = Label();\n            window.labelRenderer = this.labelRenderer; // add to global scope\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        THREEAR.initialize({ source: source }).then((controller) => {\n            // add a torus knot\n            // var geometry = new THREE.TorusKnotGeometry(0.3,0.1,64,16);\n            // var material = new THREE.MeshNormalMaterial();\n            // var torus = new THREE.Mesh( geometry, material );\n            // torus.position.y = 0.5\n            // markerGroup.add(torus);\n            //\n            // var geometry = new THREE.CubeGeometry(1,1,1);\n            // var material = new THREE.MeshNormalMaterial({\n            //     transparent : true,\n            //     opacity: 0.5,\n            //     side: THREE.DoubleSide\n            // });\n            // var cube = new THREE.Mesh( geometry, material );\n            // cube.position.y\t= geometry.parameters.height / 2;\n            // markerGroup.add(cube)\n\n            // -------------------------------------------------------\n            // Create the environment\n\n            this.environment = new Environment();\n\n            // -------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                this.gui.show();\n            }\n\n            var patternMarker = new THREEAR.PatternMarker({\n                // patternUrl: './assets/data/hiro.patt',\n                patternUrl: './assets/data/pattern-kanji.patt',\n                markerObject: markerGroup\n            });\n\n            controller.trackMarker(patternMarker);\n\n            // run the rendering loop\n            var lastTimeMsec = 0;\n            requestAnimationFrame(function animate(nowMsec) {\n                // keep looping\n                requestAnimationFrame(animate);\n                // measure time\n                lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n                var deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n                lastTimeMsec = nowMsec;\n\n                // call each update function\n                controller.update(source.domElement);\n\n                // cube.rotation.x += deltaMsec/10000 * Math.PI\n                //torus.rotation.y += deltaMsec/1000 * Math.PI\n                //torus.rotation.z += deltaMsec/1000 * Math.PI\n\n                // ----------------------\n                // Render rStats if Dev\n                if (Config.isDev && Config.isShowingStats) {\n                    // Stats.start();\n                }\n\n                // Call render function and pass in created scene and camera\n                renderer.render(scene, camera);\n\n                // render labels if enabled\n                if (Config.isShowingLables) {\n                    window.labelRenderer.domElement.hidden = false;\n                } else {\n                    window.labelRenderer.domElement.hidden = true;\n                }\n\n                // window.labelRenderer.render(scene, camera.threeCamera);\n\n                if (Config.isDev && Config.isShowingStats) {\n                     // this.stats.update();\n                 }\n\n                // Delta time is sometimes needed for certain updates\n                //const delta = this.clock.getDelta();\n\n                // Call any vendor or module frame updates here\n                TWEEN.update();\n                //this.controls.threeControls.update();\n            });\n        });\n\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Eventlistner for catching mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n    }\n\n    // constructor(container) {\n    //     // Set container property to container element\n    //     this.container = container;\n    //\n    //     // Start Three clock\n    //     this.clock = new THREE.Clock();\n    //\n    //     // Main scene creation\n    //     scene = new THREE.Scene();\n    //     window.scene = scene; // config as a global variable\n    //\n    //     scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n    //\n    //     this.mqtt = new MQTTClient(scene);\n    //\n    //     // Get Device Pixel Ratio first for retina\n    //     if (window.devicePixelRatio) {\n    //         Config.dpr = window.devicePixelRatio;\n    //     }\n    //\n    //     // Main renderer constructor\n    //     this.renderer = new Renderer(scene, container);\n    //\n    //     // Components instantiations\n    //     camera = new Camera(this.renderer.threeRenderer);\n    //\n    //     this.controls = new Controls(camera.threeCamera, container);\n    //     this.light = new Light(scene);\n    //\n    //     // Create and place lights in scene\n    //     const lights = ['ambient', 'directional', 'point', 'hemi'];\n    //     lights.forEach((light) => this.light.place(light));\n    //\n\n    //\n    //     // Instantiate texture class\n    //     this.texture = new Texture();\n    //\n    //     // Start loading the textures and then go on to load the model after the texture Promises have resolved\n    //     this.texture.load().then(() => {\n    //         this.manager = new THREE.LoadingManager();\n    //\n    //\n    //         // -----------------------------------------------------------------\n    //\n    //         // onProgress callback\n    //         this.manager.onProgress = (item, loaded, total) => {\n    //             // console.log(`${item}: ${loaded} ${total}`);\n    //         };\n    //\n    //         // All loaders done now\n    //         this.manager.onLoad = () => {\n    //             alert('Loaded');\n    //\n    //             // Set up interaction manager with the app now that the model is finished loading\n    //             new Interaction(\n    //                 this.renderer.threeRenderer,\n    //                 scene,\n    //                 camera.threeCamera,\n    //                 this.controls.threeControls\n    //             );\n    //\n    //             // Add dat.GUI controls if dev\n    //             if (Config.isDev) {\n    //                 this.meshHelper = new MeshHelper(scene, this.model.obj);\n    //                 if (Config.mesh.enableHelper) this.meshHelper.enable();\n    //                 //this.gui.load(this, this.model.obj);\n    //             }\n    //\n    //             // Everything is now fully loaded\n    //             Config.isLoaded = true;\n    //             this.container.querySelector('#loading').style.display = 'none';\n    //         };\n    //     });\n    //\n    //     // Start render which does not wait for model fully loaded\n    //\n    //     this.render();\n    //     this.container.querySelector('#loading').style.display = 'none';\n    //\n    //     // Add eventlistner for catch mouse click events\n    //     window.addEventListener('click', this.onDocumentMouseDown, false);\n    // }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        // // Not suppported in AR so far\n        // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        // mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        //\n        // raycaster.setFromCamera(mouse, camera);\n        //\n        // const intersects = raycaster.intersectObjects(scene.children);\n        //\n        // if (intersects.length > 0) {\n        //     const object = intersects[0].object;\n        //     if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //     INTERSECTED = object;\n        //     selectedLabel = INTERSECTED.children[0];\n        //     INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n        //     INTERSECTED.labelsVisibility = INTERSECTED.material.labelVisibility;\n        //     if (selectedLabel !== undefined && selectedLabel.visible !== undefined && Config.isShowingLables) {\n        //         selectedLabel.visible = !selectedLabel.visible;\n        //     }\n        //     INTERSECTED.material.selected = !INTERSECTED.material.selected;\n        //     // Obstacle selection event handling\n        //     if (INTERSECTED.name.startsWith('Obstacle')) {\n        //         if (INTERSECTED.material.selected) {\n        //             INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\n        //             INTERSECTED.material.emissive.setHex(0xf95f4a);\n        //         } else {\n        //             INTERSECTED.currentHex = INTERSECTED.material.userData.originalEmmisive;\n        //             INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\n        //         }\n        //         // Robot selection event handling\n        //     } else if (INTERSECTED.name.startsWith('Robot')) {\n        //         if (INTERSECTED.material.selected) {\n        //             INTERSECTED.material.setValues({ opacity: 0.5 });\n        //         } else {\n        //             INTERSECTED.material.setValues({ opacity: 1 });\n        //         }\n        //         if (INTERSECTED.clickEvent !== undefined) {\n        //             INTERSECTED.clickEvent(INTERSECTED);\n        //         }\n        //     }\n        // } else {\n        //     if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //     INTERSECTED = null;\n        // }\n    }\n\n    onDocumentMouseMove(event) {\n        event.preventDefault();\n\n        // // Not suppoprted in AR so far\n        // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        // mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        //\n        // raycaster.setFromCamera(mouse, camera.threeCamera);\n        //\n        // const intersects = raycaster.intersectObjects(scene.children, true);\n        // if (intersects.length > 0) {\n        //     const object = intersects[0].object;\n        //     if (INTERSECTED !== object) {\n        //         if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //         INTERSECTED = object;\n        //         selectedLabel = INTERSECTED.children[0];\n        //         INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n        //         INTERSECTED.currentColor = INTERSECTED.material.opacity;\n        //         INTERSECTED.material.setValues({ color: 0x03dffc, opacity: 0.75 });\n        //     }\n        // } else {\n        //     if (INTERSECTED)\n        //     INTERSECTED.material.setValues({ opacity: 1.0, color: INTERSECTED.material.userData.originalColor });\n        //     INTERSECTED = null;\n        // }\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}